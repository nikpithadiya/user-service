service: user-service

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  timeout: 30
  environment:
    USERS_TABLE: ${env:USERS_TABLE}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Scan"
        - "dynamodb:Query"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${env:AWS_ACCOUNT_ID}:table/${env:USERS_TABLE}"


functions:
  getAllUsers:
    handler: ./service/userHandlergetAllUsers
    events:
      - http:
          path: users
          method: get
          cors: true

  createUser:
    handler: ./service/userHandlercreateUser
    events:
      - http:
          path: users
          method: post
          cors: true
          
  getUser:
    handler: ./service/userHandlergetUser
    events:
      - http:
          path: users/{userId}
          method: get
          cors: true

  updateUser:
    handler: ./service/userHandlerupdateUser
    events:
      - http:
          path: users/{userId}
          method: put
          cors: true

  deleteUser:
    handler: ./service/userHandlerdeleteUser
    events:
      - http:
          path: users/{userId}
          method: delete
          cors: true

resources:
  Resources:
    users:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

package:
  individually: true
  exclude:
    - node_modules/**
    - test/**
    - .git/**
    - .vscode/**
    - .DS_Store

plugins:
  # - serverless-webpack  # Plugin for bundling with Webpack
  - serverless-offline   # Plugin for local development/testing

# custom:
#   webpack:
#     webpackConfig: './webpack.config.js'
#     includeModules: true
